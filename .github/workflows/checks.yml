name: Run code quality checks

on:
    pull_request:
        branches: [master, develop]
    push:
        branches: [master]

jobs:
    phpcs_check:
        name: PHPCS check on PHP ${{ matrix.php }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [7.2, 7.3, 7.4]

        steps:
            # Checkout repository
            - name: Checkout
              uses: actions/checkout@v2

            # Setup PHP versions, run checks
            - name: PHP setup
              uses: shivammathur/setup-php@v2
              with:
                php-version: ${{ matrix.php }}
                coverage: pcov

            - name: Get composer cache directory
              id: composer-cache
              run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                  ${{ runner.os }}-composer-

            - name: Install composer packages
              run: composer install --no-progress

            - name: Check coding standards using PHPCS
              run: composer standards:check -- --runtime-set testVersion ${{ matrix.php }}-

    phpstan:
        name: PHPStan check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP setup
              uses: shivammathur/setup-php@v2
              with:
                php-version: 7.2
                coverage: pcov

            - name: Install composer packages
              run: composer install --no-progress

            - name: Analyse code using phpstan
              run: composer analyze

    tests:
        name: Integration tests
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                    MYSQL_DATABASE: wordpresstest
                ports:
                    - 3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

            wordpress:
                image: wordpress:5.4.1-php7.2
                env:
                    WORDPRESS_DB_HOST: mysql
                    WORDPRESS_DB_USER: admin
                    WORDPRESS_DB_PASSWORD: ""
                    WORDPRESS_DB_NAME: wordpresstest
                ports:
                    - 8080:80
                options: -v /__w/woo-solo-api/woo-solo-api:/var/www/html/:rw

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP setup
              uses: shivammathur/setup-php@v2
              with:
                php-version: 7.2
                coverage: pcov

            - name: Set Node.js version
              uses: actions/setup-node@v1
              with:
                node-version: 14

            - name: Start WordPress
              run: docker run --name test-wordpress -p 8081:80 -d wordpress

            - name: Copy .env.testing
              run: yes | cp .env.actions.testing .env.testing

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                path: node_modules
                key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.OS }}-build-${{ env.cache-name }}-
                  ${{ runner.OS }}-build-
                  ${{ runner.OS }}-

            - name: Get composer cache directory
              id: composer-cache
              run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v1
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                  ${{ runner.os }}-composer-

            - name: Install composer packages
              run: composer install --no-progress

            - name: Install node packages
              run: npm install

            - name: Run JS build
              run: npm run build

            - name: Run integration tests
              run: composer test:integration

