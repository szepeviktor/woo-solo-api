name: Run code quality checks

on:
    pull_request:
        branches: [master, develop]
    push:
        branches: [master]

jobs:
    phpcs_check:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [7.2, 7.3, 7.4]

        name: PHPCS check on PHP ${{ matrix.php }}
        steps:
            # Checkout repository
            - name: Checkout
              uses: actions/checkout@v2

            # Setup PHP versions, run checks
            - name: PHP Setup
              uses: shivammathur/setup-php@v2
              with:
                php-version: ${{ matrix.php }}
                coverage: pcov

            - name: Install composer packages
              run: composer install --no-progress

            - name: Check coding standards using phpcs
              run: composer standards:check -- --runtime-set testVersion ${{ matrix.php }}-

    phpstan:
        runs-on: ubuntu-latest
        name: phpstan check
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP Setup
              uses: shivammathur/setup-php@v2
              with:
                php-version: 7.2
                coverage: pcov

            - name: Install composer packages
              run: composer install --no-progress

            - name: Analyse code using phpstan
              run: composer analyze

    tests:
        services:
            mariadb:
                image: mysql:5.7
                ports:
                    - 3306
                env:
                    MYSQL_ROOT_PASSWORD: password
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        runs-on: ubuntu-latest

        name: Integration tests
        steps:
            - name: Verify MySQL connection from host
              run: |
                apt-get update
                apt-get install -y mysql-client
                mysql --host mydb -uroot -ppassword -e "SHOW DATABASES"

            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP Setup
              uses: shivammathur/setup-php@v2
              with:
                php-version: 7.2
                coverage: pcov

            - name: Set Node.js version
              uses: actions/setup-node@v1
              with:
                node-version: 14

            # Setup WordPress so that we can run tests
            - name: Set up WordPress instance so that we can run tests
              run: |
                sudo systemctl start mysql
                curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                chmod +x wp-cli.phar
                sudo mv wp-cli.phar /usr/local/bin/wp
                wp core download
                wp config create --dbname=$TEST_DB_NAME --dbuser=$TEST_DB_USER
                wp core install --url=$TEST_SITE_WP_URL --title=Test --admin_user=$TEST_SITE_ADMIN_USERNAME --admin_password=$TEST_SITE_ADMIN_PASSWORD --admin_email=$TEST_SITE_ADMIN_EMAIL
                ls --all
                pwd
              env:
                WP_ROOT_FOLDER: "/var/www/html"
                TEST_SITE_WP_ADMIN_PATH: "/wp-admin"
                TEST_SITE_DB_NAME: "wordpresstest"
                TEST_SITE_DB_HOST: "localhost"
                TEST_SITE_DB_USER: "root"
                TEST_SITE_DB_PORT: ${{ job.services.mysql.ports[3306] }}
                TEST_SITE_DB_PASSWORD: ""
                TEST_SITE_TABLE_PREFIX: "wp_"
                TEST_TABLE_PREFIX: "wp_"
                TEST_SITE_WP_URL: "http://wordpress.test"
                TEST_SITE_WP_DOMAIN: "wordpress.test"
                TEST_SITE_ADMIN_EMAIL: "admin@local.test"
                TEST_SITE_ADMIN_USERNAME: "admin"
                TEST_SITE_ADMIN_PASSWORD: "password"
                TEST_DB_NAME: "wordpresstest"
                TEST_DB_HOST: "localhost"
                TEST_DB_USER: "root"
                TEST_DB_PASSWORD: ""
                TEST_DB_PORT: ${{ job.services.mysql.ports[3306] }}

            - name: Install composer packages
              run: composer install --no-progress

            - name: Install node packages
              run: npm install

            - name: Run integration tests
              run: composer test:integration
